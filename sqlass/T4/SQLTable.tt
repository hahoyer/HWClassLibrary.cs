<#@ import namespace="global::HWClassLibrary.Helper" #>
using System;
using System.Collections.Generic;
using System.Linq;
using HWClassLibrary.Debug;
using HWClassLibrary.sqlass;

namespace <#= _context.NameSpace #>.Tables<#= NameSpaceSuffix #>
{
    sealed public partial class <#= ClassName #> 
        : ISQLSupportProvider<#
	if (HasSQLKey)
    {#>
        
        , <#= SQLKeyProvider #><#
    }#>
    
    {<# 
	    foreach (var column in Columns)                                           
        {#> 
        public <#= column.Type #> <#= column.Name #>;<#
        }#>


        ISQLSupport ISQLSupportProvider.SQLSupport{get{return new SQLSupport.<#= ClassName #>(this);}} <#
	if (HasSQLKey)
    {#>

        <#= SQLKeyType #> <#= SQLKeyProvider #>.SQLKey { get { return <#= SQLKeyValue #>; } }<# 
    }#>
    
    }
}

namespace <#= _context.NameSpace #>.SQLSupport<#= NameSpaceSuffix #>
{
    public partial class <#= ClassName #>: ISQLSupport
    {
        readonly Tables.<#= ClassName #> _target;
        public <#= ClassName #>(Tables.<#= ClassName #> target){_target = target;}

        string ISQLSupport.Insert
        {
            get
            {
                var result = "insert into <#= SQLTableName #> values(";<# 
            foreach (var column in Columns)                                           
            {#> 
                result += _target.<#= column.Name #>.SQLFormat();<#
	            if (!IsLast(column))
	            {#>

                result += ", ";<#
	            }
	            else
                {#>

                result += ")";<#
                }
           }#>   

                return result;
            }
        }
    }
}
<#
// ReSharper disable FieldCanBeMadeReadOnly.Local
#>

